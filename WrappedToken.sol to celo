// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract WrappedToken is ERC20 {
    address public vaultAddress;

    event TokensMinted(address indexed user, uint256 amount);
    event TokensBurned(address indexed user, uint256 amount);

    constructor(string memory name, string memory symbol, address _vault)
        ERC20(name, symbol)
    {
        vaultAddress = _vault;
    }

    modifier onlyVault() {
        require(msg.sender == vaultAddress, "Solo el vault puede llamar");
        _;
    }

    function mint(address to, uint256 amount) external onlyVault {
        _mint(to, amount);
        emit TokensMinted(to, amount);
    }

    function burn(uint256 amount) external {
        _burn(msg.sender, amount);
        emit TokensBurned(msg.sender, amount);
    }
}